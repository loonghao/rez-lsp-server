# Generated by Cargo
# will have compiled files and executables
debug/
target/
dist/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
# Cargo.lock  # Keep Cargo.lock for reproducible builds

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Generated by cargo mutants
# Contains mutation testing data
**/mutants.out*/

# Node.js dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json

# VSCode extension build artifacts
vscode-extension/out/
vscode-extension/*.vsix
vscode-extension/node_modules/
vscode-extension/server/

# Development and testing files (cleaned up for release)
test_lsp_client.js
test_package.py
vscode-extension/test-files/
vscode-extension/test-workspace/
vscode-extension/scripts/debug-*.js
vscode-extension/scripts/test-*.js
vscode-extension/scripts/diagnose-*.js
vscode-extension/scripts/install-*.js
vscode-extension/scripts/final-*.js
vscode-extension/scripts/diagnostic-*.txt
vscode-extension/images/create-*.html
vscode-extension/images/icon-preview.html

# Documentation files for development
vscode-extension/ICON_SETUP.md
vscode-extension/SUCCESS_VERIFICATION.md
vscode-extension/TROUBLESHOOTING.md

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE files
.vscode/settings.json
.idea/
*.swp
*.swo
*~

# Temporary files
*.tmp
*.temp
.cache/

# RustRover
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
