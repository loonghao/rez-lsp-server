name: Release-plz

permissions:
  pull-requests: write
  contents: write

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force_release:
        description: 'Force release even if no changes detected'
        required: false
        default: false
        type: boolean

jobs:
  # Release unpublished packages to crates.io
  release-plz-release:
    name: Release-plz release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || !contains(github.event.head_commit.message, '[skip release]') }}
    permissions:
      contents: write
    concurrency:
      group: release-plz-release
      cancel-in-progress: true
    steps:
      - name: Debug release-plz trigger
        run: |
          echo "üîç Release-plz release job triggered"
          echo "Repository: ${{ github.repository }}"
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Commit message: ${{ github.event.head_commit.message }}"
          echo "Skip release check: ${{ contains(github.event.head_commit.message, '[skip release]') }}"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Use PAT to allow triggering other workflows (like release.yml)
          token: ${{ secrets.RELEASE_PLZ_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run release-plz
        uses: release-plz/action@v0.5
        with:
          command: release
        env:
          # Use PAT to allow triggering other workflows, ensure no whitespace
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLZ_TOKEN || secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  # Create a PR with the new versions and changelog, preparing the next release
  release-plz-pr:
    name: Release-plz PR
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || !contains(github.event.head_commit.message, '[skip release]') }}
    permissions:
      contents: write
      pull-requests: write
    concurrency:
      group: release-plz-pr
      cancel-in-progress: true
    steps:
      - name: Debug release-plz PR trigger
        run: |
          echo "üîç Release-plz PR job triggered"
          echo "Repository: ${{ github.repository }}"
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Commit message: ${{ github.event.head_commit.message }}"
          echo "Skip release check: ${{ contains(github.event.head_commit.message, '[skip release]') }}"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Use PAT to allow triggering CI workflows on the release PR
          token: ${{ secrets.RELEASE_PLZ_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run release-plz
        uses: release-plz/action@v0.5
        with:
          command: release-pr
        env:
          # Use PAT to allow triggering CI workflows on the release PR, ensure no whitespace
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLZ_TOKEN || secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}


